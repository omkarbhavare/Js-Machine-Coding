Here‚Äôs a **Quick JavaScript Revision Guide** for rebuilding the ‚è±Ô∏è **Stopwatch App** from scratch using your code structure:
# ‚ö° JavaScript Quick Revision: Stopwatch App

## ‚úÖ 1. **Initial Setup**

### üîπ Select all DOM elements:

```js
const timeDisplay = document.getElementById("timeDisplay");
const startBtn = document.getElementById("startBtn");
const pauseBtn = document.getElementById("pauseBtn");
const resetBtn = document.getElementById("resetBtn");
const lapBtn = document.getElementById("lapBtn");
const clearAllBtn = document.getElementById("clearAllBtn");
const lapDisplay = document.getElementById("lapDisplay");
```

---

## ‚úÖ 2. **Variables for Timer**

```js
let isRunning = false;
let intervalId = null;
let totalSeconds = 0;
```

---

## ‚úÖ 3. **Utility Functions**

### üîπ Format time as `HH:MM:SS`

```js
function formatTime(totalSeconds) {
  const hours = Math.floor(totalSeconds / 3600);
  const minutes = Math.floor((totalSeconds % 3600) / 60);
  const seconds = totalSeconds % 60;
  return `${pad(hours)} H : ${pad(minutes)} M: ${pad(seconds)} S`;
}
```

### üîπ Pad single-digit numbers with zero

```js
function pad(num) {
  return num.toString().padStart(2, "0");
}
```

### üîπ Update display

```js
function updateDisplay() {
  timeDisplay.textContent = formatTime(totalSeconds);
}
```

---

## ‚úÖ 4. **Core Functionalities**

### ‚ñ∂Ô∏è Start Timer

```js
function startTimer() {
  if (!isRunning) {
    isRunning = true;
    intervalId = setInterval(() => {
      totalSeconds++;
      updateDisplay();
    }, 1000);
  }
}
```

### ‚è∏Ô∏è Pause Timer

```js
function pauseTimer() {
  clearInterval(intervalId);
  isRunning = false;
}
```

### üîÅ Reset Timer

```js
function resetTimer() {
  pauseTimer();
  totalSeconds = 0;
  updateDisplay();
}
```

### üèÅ Add Lap

```js
function addLap() {
  if (isRunning) {
    const lapItem = document.createElement("div");
    lapItem.innerText = formatTime(totalSeconds);
    lapItem.className = "lapItem";
    lapItem.setAttribute("role", "list-item");
    lapDisplay.appendChild(lapItem);
  }
}
```

### üßπ Clear All Laps

```js
function clearLaps() {
  lapDisplay.innerHTML = "";
}
```

---

## ‚úÖ 5. **Event Listeners**

```js
startBtn.addEventListener("click", startTimer);
pauseBtn.addEventListener("click", pauseTimer);
resetBtn.addEventListener("click", resetTimer);
lapBtn.addEventListener("click", addLap);
clearAllBtn.addEventListener("click", clearLaps);
```

---

## üîÅ Summary of Steps:

| Step | Description                                                   |
| ---- | ------------------------------------------------------------- |
| 1Ô∏è‚É£  | Setup initial HTML structure and buttons                      |
| 2Ô∏è‚É£  | Add time formatting + padding logic                           |
| 3Ô∏è‚É£  | Implement `start`, `pause`, `reset`, `lap`, and `clear` logic |
| 4Ô∏è‚É£  | Link all functions to button click events                     |
| 5Ô∏è‚É£  | Display formatted time and lap times in UI                    |

---

